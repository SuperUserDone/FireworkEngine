// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: scene.capnp

#include "scene.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<47> b_a161f2ef428ad8f3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    243, 216, 138,  66, 239, 242,  97, 161,
     12,   0,   0,   0,   1,   0,   1,   0,
    248, 136, 137, 196, 130,  38, 136, 165,
      1,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 101, 110, 101,  46,  99,  97,
    112, 110, 112,  58,  84, 101, 120, 116,
    117, 114, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 122, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    237, 101,  53,  96, 138, 156,  77, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a161f2ef428ad8f3 = b_a161f2ef428ad8f3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a161f2ef428ad8f3[] = {
  &s_c94d9c8a603565ed,
};
static const uint16_t m_a161f2ef428ad8f3[] = {0, 1};
static const uint16_t i_a161f2ef428ad8f3[] = {0, 1};
const ::capnp::_::RawSchema s_a161f2ef428ad8f3 = {
  0xa161f2ef428ad8f3, b_a161f2ef428ad8f3.words, 47, d_a161f2ef428ad8f3, m_a161f2ef428ad8f3,
  1, 2, i_a161f2ef428ad8f3, nullptr, nullptr, { &s_a161f2ef428ad8f3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_84ec7d47da394ec1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    193,  78,  57, 218,  71, 125, 236, 132,
     12,   0,   0,   0,   1,   0,   0,   0,
    248, 136, 137, 196, 130,  38, 136, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 101, 110, 101,  46,  99,  97,
    112, 110, 112,  58,  77,  97, 116, 101,
    114, 105,  97, 108,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    116, 101, 120, 116, 117, 114, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_84ec7d47da394ec1 = b_84ec7d47da394ec1.words;
#if !CAPNP_LITE
static const uint16_t m_84ec7d47da394ec1[] = {0};
static const uint16_t i_84ec7d47da394ec1[] = {0};
const ::capnp::_::RawSchema s_84ec7d47da394ec1 = {
  0x84ec7d47da394ec1, b_84ec7d47da394ec1.words, 37, nullptr, m_84ec7d47da394ec1,
  0, 1, i_84ec7d47da394ec1, nullptr, nullptr, { &s_84ec7d47da394ec1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_e94cea6b10cd563c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     60,  86, 205,  16, 107, 234,  76, 233,
     12,   0,   0,   0,   1,   0,   0,   0,
    248, 136, 137, 196, 130,  38, 136, 165,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  23,   0,   0,   0,
    115,  99, 101, 110, 101,  46,  99,  97,
    112, 110, 112,  58,  77,  97, 112,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    232,  99,  29, 214, 219, 167,  85, 170,
      1,   0,   0,   0,  50,   0,   0,   0,
     69, 110, 116, 114, 121,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    232,  99,  29, 214, 219, 167,  85, 170,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     60,  86, 205,  16, 107, 234,  76, 233,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   1,   0,
      5,   0,   0,   0,  34,   0,   0,   0,
      5,   0,   0,   0,  50,   0,   0,   0,
     75, 101, 121,   0,   0,   0,   0,   0,
     86,  97, 108, 117, 101,   0,   0,   0, }
};
::capnp::word const* const bp_e94cea6b10cd563c = b_e94cea6b10cd563c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e94cea6b10cd563c[] = {
  &s_aa55a7dbd61d63e8,
};
static const uint16_t m_e94cea6b10cd563c[] = {0};
static const uint16_t i_e94cea6b10cd563c[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_e94cea6b10cd563c[] = {
  { 16777216,  ::blood::capnp::Map< ::capnp::AnyPointer,  ::capnp::AnyPointer>::Entry::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_e94cea6b10cd563c = {
  0xe94cea6b10cd563c, b_e94cea6b10cd563c.words, 48, d_e94cea6b10cd563c, m_e94cea6b10cd563c,
  1, 1, i_e94cea6b10cd563c, nullptr, nullptr, { &s_e94cea6b10cd563c, nullptr, bd_e94cea6b10cd563c, 0, sizeof(bd_e94cea6b10cd563c) / sizeof(bd_e94cea6b10cd563c[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_aa55a7dbd61d63e8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    232,  99,  29, 214, 219, 167,  85, 170,
     16,   0,   0,   0,   1,   0,   0,   0,
     60,  86, 205,  16, 107, 234,  76, 233,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 101, 110, 101,  46,  99,  97,
    112, 110, 112,  58,  77,  97, 112,  46,
     69, 110, 116, 114, 121,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     60,  86, 205,  16, 107, 234,  76, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
     60,  86, 205,  16, 107, 234,  76, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aa55a7dbd61d63e8 = b_aa55a7dbd61d63e8.words;
#if !CAPNP_LITE
static const uint16_t m_aa55a7dbd61d63e8[] = {0, 1};
static const uint16_t i_aa55a7dbd61d63e8[] = {0, 1};
const ::capnp::_::RawSchema s_aa55a7dbd61d63e8 = {
  0xaa55a7dbd61d63e8, b_aa55a7dbd61d63e8.words, 47, nullptr, m_aa55a7dbd61d63e8,
  0, 2, i_aa55a7dbd61d63e8, nullptr, nullptr, { &s_aa55a7dbd61d63e8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<120> b_b1bef838f3080e38 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     56,  14,   8, 243,  56, 248, 190, 177,
     12,   0,   0,   0,   1,   0,   0,   0,
    248, 136, 137, 196, 130,  38, 136, 165,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 101, 110, 101,  46,  99,  97,
    112, 110, 112,  58,  83,  99, 101, 110,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     32,   1,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 116, 101, 114, 105,  97, 108,
    115,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     60,  86, 205,  16, 107, 234,  76, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     60,  86, 205,  16, 107, 234,  76, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  39,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    193,  78,  57, 218,  71, 125, 236, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116, 117, 114, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     60,  86, 205,  16, 107, 234,  76, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
     60,  86, 205,  16, 107, 234,  76, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  39,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    243, 216, 138,  66, 239, 242,  97, 161,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 116, 105, 116, 105, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      4,  84, 174, 218, 181, 204, 135, 190,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1bef838f3080e38 = b_b1bef838f3080e38.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b1bef838f3080e38[] = {
  &s_be87ccb5daae5404,
  &s_e94cea6b10cd563c,
};
static const uint16_t m_b1bef838f3080e38[] = {3, 1, 0, 2};
static const uint16_t i_b1bef838f3080e38[] = {0, 1, 2, 3};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_b1bef838f3080e38[] = {
  { 16777217,  ::blood::capnp::Map< ::capnp::Text,  ::blood::capnp::Material>::_capnpPrivate::brand() },
  { 16777218,  ::blood::capnp::Map< ::capnp::Text,  ::blood::capnp::Texture>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_b1bef838f3080e38 = {
  0xb1bef838f3080e38, b_b1bef838f3080e38.words, 120, d_b1bef838f3080e38, m_b1bef838f3080e38,
  2, 4, i_b1bef838f3080e38, nullptr, nullptr, { &s_b1bef838f3080e38, nullptr, bd_b1bef838f3080e38, 0, sizeof(bd_b1bef838f3080e38) / sizeof(bd_b1bef838f3080e38[0]), nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace blood {
namespace capnp {

// Texture
constexpr uint16_t Texture::_capnpPrivate::dataWordSize;
constexpr uint16_t Texture::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Texture::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Texture::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Material
constexpr uint16_t Material::_capnpPrivate::dataWordSize;
constexpr uint16_t Material::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Material::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Material::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Scene
constexpr uint16_t Scene::_capnpPrivate::dataWordSize;
constexpr uint16_t Scene::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Scene::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Scene::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

