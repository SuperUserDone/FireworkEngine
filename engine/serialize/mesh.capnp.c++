// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: mesh.capnp

#include "mesh.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<56> b_9e95f79d9be95ce6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230,  92, 233, 155, 157, 247, 149, 158,
     11,   0,   0,   0,   1,   0,   0,   0,
     79, 132,  43,  13,  86,  58,  75, 131,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 104,  46,  99,  97, 112,
    110, 112,  58,  77, 101, 115, 104,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    118, 101, 114, 116, 105,  99, 105, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    192, 174, 211, 235, 226,  10, 211, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 100, 105,  99, 105, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9e95f79d9be95ce6 = b_9e95f79d9be95ce6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9e95f79d9be95ce6[] = {
  &s_94d30ae2ebd3aec0,
};
static const uint16_t m_9e95f79d9be95ce6[] = {1, 0};
static const uint16_t i_9e95f79d9be95ce6[] = {0, 1};
const ::capnp::_::RawSchema s_9e95f79d9be95ce6 = {
  0x9e95f79d9be95ce6, b_9e95f79d9be95ce6.words, 56, d_9e95f79d9be95ce6, m_9e95f79d9be95ce6,
  1, 2, i_9e95f79d9be95ce6, nullptr, nullptr, { &s_9e95f79d9be95ce6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace fw {
namespace capnp {

// Mesh
constexpr uint16_t Mesh::_capnpPrivate::dataWordSize;
constexpr uint16_t Mesh::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Mesh::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Mesh::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

